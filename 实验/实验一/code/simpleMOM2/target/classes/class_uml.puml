@startuml
' 定义样式
!define YELLOW_BOX #FFFFB9
!define RED_LINE #A8504B

' 全局样式设置
skinparam classAttributeIconSize 0
hide empty members
hide circle

' 类和接口的样式配置
skinparam class {
    BackgroundColor YELLOW_BOX
    BorderColor RED_LINE
    ArrowColor RED_LINE
}

skinparam interface {
    BackgroundColor YELLOW_BOX
    BorderColor RED_LINE
}

' 接口定义
interface Message {
    + getContent(): String
}

interface MessageQueue {
    + enqueue(message: Message)
    + dequeue(): Message
    + addListener(listener: MessageListener)
    + removeListener(listener: MessageListener)
}

interface MessageListener {
    + onMessageChanged(queue: MessageQueue)
}

interface MessageCenter {
    + registerQueue(queue: MessageQueue)
    + unregisterQueue(queue: MessageQueue)
    + broadcast(message: Message, queue: MessageQueue)
}

' 具体类定义
class SimpleMessage {
    - content: String
    + SimpleMessage(content: String)
    + getContent(): String
}

class SimpleMessageQueue {
    - capacity: int
    - messages: List<Message>
    - listeners: List<MessageListener>
    - lock: Object
    + SimpleMessageQueue(capacity: int)
    + enqueue(message: Message)
    + dequeue(): Message
    + addListener(listener: MessageListener)
    + removeListener(listener: MessageListener)
    - notifyListeners()
}

class SimpleMessageCenter {
    - queues: List<MessageQueue>
    - {static} instance: SimpleMessageCenter
    - SimpleMessageCenter()
    + {static} getInstance(): SimpleMessageCenter
    + registerQueue(queue: MessageQueue)
    + unregisterQueue(queue: MessageQueue)
    + broadcast(message: Message, queue: MessageQueue)
}

class MessageFactory {
    - MessageFactory()
    + {static} createMessage(content: String): Message
    + {static} createMessageQueue(capacity: int): MessageQueue
    + {static} createMessageCenter(): MessageCenter
}

class Producer {
    - queue: MessageQueue
    - name: String
    + Producer(queue: MessageQueue, name: String)
    + run()
}

class Consumer {
    - queue: MessageQueue
    - name: String
    + Consumer(queue: MessageQueue, name: String)
    + run()
}

' 关系定义
SimpleMessage ..> Message
SimpleMessageQueue ..> MessageQueue
SimpleMessageCenter ..> MessageCenter

SimpleMessageQueue o-- Message
SimpleMessageQueue o-- MessageListener

Producer --> MessageQueue
Producer ..> MessageFactory
Producer ..> Message
Consumer --> MessageQueue
Consumer ..> Message

MessageFactory ..> SimpleMessage
MessageFactory ..> SimpleMessageQueue
MessageFactory ..> SimpleMessageCenter

SimpleMessageCenter o-- MessageQueue

MessageQueue ..> MessageListener
MessageQueue ..> Message

@enduml